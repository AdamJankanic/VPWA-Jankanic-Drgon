"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const standalone_1 = require("@adonisjs/core/build/standalone");
let MessageController = class MessageController {
    constructor(messageRepository) {
        this.messageRepository = messageRepository;
    }
    async loadMessages({ params }) {
        return this.messageRepository.getAll(params.name);
    }
    async addMessage({ params, socket, auth }, content) {
        const message = await this.messageRepository.create(params.name, auth.user.id, content);
        socket.broadcast.emit('message', message);
        return message;
    }
};
MessageController = __decorate([
    (0, standalone_1.inject)(['Repositories/MessageRepository']),
    __metadata("design:paramtypes", [Object])
], MessageController);
exports.default = MessageController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNZXNzYWdlQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVBLGdFQUF3RDtBQVN4RCxJQUFxQixpQkFBaUIsR0FBdEMsTUFBcUIsaUJBQWlCO0lBQ3BDLFlBQXFCLGlCQUE0QztRQUE1QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQTJCO0lBQUcsQ0FBQztJQUU5RCxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsTUFBTSxFQUFxQjtRQUNyRCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ25ELENBQUM7SUFFTSxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQXFCLEVBQUUsT0FBZTtRQUNsRixNQUFNLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQTtRQUV4RixNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUE7UUFFekMsT0FBTyxPQUFPLENBQUE7SUFDaEIsQ0FBQztDQUNGLENBQUE7QUFkb0IsaUJBQWlCO0lBRHJDLElBQUEsbUJBQU0sRUFBQyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7O0dBQ3RCLGlCQUFpQixDQWNyQztrQkFkb0IsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBXc0NvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6UnVieTE4NC9Tb2NrZXQuSU8vV3NDb250ZXh0J1xyXG5pbXBvcnQgdHlwZSB7IE1lc3NhZ2VSZXBvc2l0b3J5Q29udHJhY3QgfSBmcm9tICdAaW9jOlJlcG9zaXRvcmllcy9NZXNzYWdlUmVwb3NpdG9yeSdcclxuaW1wb3J0IHsgaW5qZWN0IH0gZnJvbSAnQGFkb25pc2pzL2NvcmUvYnVpbGQvc3RhbmRhbG9uZSdcclxuXHJcbi8vIGluamVjdCByZXBvc2l0b3J5IGZyb20gY29udGFpbmVyIHRvIGNvbnRyb2xsZXIgY29uc3RydWN0b3JcclxuLy8gd2UgZG8gc28gYmVjYXVzZSB3ZSBjYW4gZXh0cmFjdCBkYXRhYmFzZSBzcGVjaWZpYyBzdG9yYWdlIHRvIGFub3RoZXIgY2xhc3NcclxuLy8gYW5kIGFsc28gdG8gcHJldmVudCBiaWcgY29udHJvbGxlciBtZXRob2RzIGRvaW5nIGV2ZXJ5dGhpbmdcclxuLy8gY29udHJvbGVyIG1ldGhvZCBqdXN0IGdldHMgZGF0YSAodmFsaWRhdGVzIGl0KSBhbmQgY2FsbHMgcmVwb3NpdG9yeVxyXG4vLyBhbHNvIHdlIGNhbiB0aGVuIHRlc3Qgc3RhbmRhbG9uZSByZXBvc2l0b3J5IHdpdGhvdXQgY29udHJvbGxlclxyXG4vLyBpbXBsZW1lbnRhdGlvbiBpcyBiaW5kIGludG8gY29udGFpbmVyIGluc2lkZSBwcm92aWRlcnMvQXBwUHJvdmlkZXIudHNcclxuQGluamVjdChbJ1JlcG9zaXRvcmllcy9NZXNzYWdlUmVwb3NpdG9yeSddKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IgKHByaXZhdGUgbWVzc2FnZVJlcG9zaXRvcnk6IE1lc3NhZ2VSZXBvc2l0b3J5Q29udHJhY3QpIHt9XHJcblxyXG4gIHB1YmxpYyBhc3luYyBsb2FkTWVzc2FnZXMoeyBwYXJhbXMgfTogV3NDb250ZXh0Q29udHJhY3QpIHtcclxuICAgIHJldHVybiB0aGlzLm1lc3NhZ2VSZXBvc2l0b3J5LmdldEFsbChwYXJhbXMubmFtZSlcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhc3luYyBhZGRNZXNzYWdlKHsgcGFyYW1zLCBzb2NrZXQsIGF1dGggfTogV3NDb250ZXh0Q29udHJhY3QsIGNvbnRlbnQ6IHN0cmluZykge1xyXG4gICAgY29uc3QgbWVzc2FnZSA9IGF3YWl0IHRoaXMubWVzc2FnZVJlcG9zaXRvcnkuY3JlYXRlKHBhcmFtcy5uYW1lLCBhdXRoLnVzZXIhLmlkLCBjb250ZW50KVxyXG4gICAgLy8gYnJvYWRjYXN0IG1lc3NhZ2UgdG8gb3RoZXIgdXNlcnMgaW4gY2hhbm5lbFxyXG4gICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdtZXNzYWdlJywgbWVzc2FnZSlcclxuICAgIC8vIHJldHVybiBtZXNzYWdlIHRvIHNlbmRlclxyXG4gICAgcmV0dXJuIG1lc3NhZ2VcclxuICB9XHJcbn0iXX0=