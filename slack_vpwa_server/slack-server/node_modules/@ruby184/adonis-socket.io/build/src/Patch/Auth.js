"use strict";
/*
 * @ruby184/adonis-socket.io
 *
 * (c) Ľubomír "Ruby" Jesze <lubomir.j184@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.patchAuthManager = void 0;
// here we will patch auth oat guard to take auth token from socket handshake
// not the best solution but it works for now
function patchAuthManager(Auth, WsContext) {
    const { AuthenticationException } = require('@adonisjs/auth/build/standalone');
    const originalMakeOatGuard = Auth['makeOatGuard'];
    Auth['makeOatGuard'] = function makeOatGuard(mapping, config, provider, ctx) {
        const guard = originalMakeOatGuard.call(this, mapping, config, provider, ctx);
        if (ctx instanceof WsContext) {
            guard.getBearerToken = function getBearerToken() {
                const token = this.ctx.socket.handshake.auth.token;
                if (!token) {
                    throw AuthenticationException.invalidToken(this.name);
                }
                return token;
            };
        }
        return guard;
    };
}
exports.patchAuthManager = patchAuthManager;
