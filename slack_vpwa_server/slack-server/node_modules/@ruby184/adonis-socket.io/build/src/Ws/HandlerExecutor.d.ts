/// <reference types="@adonisjs/application/build/adonis-typings" />
import type { ApplicationContract } from '@ioc:Adonis/Core/Application';
import type { ErrorHandler, WsConfig } from '@ioc:Ruby184/Socket.IO/Ws';
import type { Namespace, Server } from 'socket.io';
import type { PreCompiler } from './PreCompiler';
import type { Store } from './Store';
export declare class HandlerExecutor {
    private application;
    private precompiler;
    private store;
    private io;
    /**
     * Exception manager to handle exceptions
     */
    private exception;
    /**
     * Resolve bindings required for creating context from container
     */
    private Server;
    private Request;
    private Response;
    private WsContext;
    private encryption;
    protected nsp: Namespace | null;
    constructor(application: ApplicationContract, precompiler: PreCompiler, store: Store, io: Server);
    private getContext;
    private handleConnection;
    private addMiddlewareToNamespace;
    attach(socketConfig: WsConfig, exceptionHandler?: ErrorHandler): boolean;
}
