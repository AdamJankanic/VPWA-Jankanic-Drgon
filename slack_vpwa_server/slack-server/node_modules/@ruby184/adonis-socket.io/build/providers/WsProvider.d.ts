/// <reference types="@adonisjs/application/build/adonis-typings" />
import type { ApplicationContract } from '@ioc:Adonis/Core/Application';
/**
 * The application provider that adds socket.io websocket server
 * and attaches it to adonis http server.
 */
export default class WsProvider {
    protected app: ApplicationContract;
    constructor(app: ApplicationContract);
    /**
     * Registering the main ws server
     */
    protected registerWs(): void;
    /**
     * Registering ws context
     */
    protected registerWsContext(): void;
    /**
     * Registering ws middleware store to the container
     */
    protected registerMiddlewareStore(): void;
    /**
     * Registering `WsExceptionHandler` to the container.
     */
    protected registerWsExceptionHandler(): void;
    /**
     * Registering all required bindings to the container
     */
    register(): void;
    /**
     * Do some monkey patching so things like auth is working fine with sockets
     */
    boot(): void;
    /**
     * When application is ready attach socket.io to adonis http server
     */
    ready(): Promise<void>;
    /**
     * When application is shutting down close all active websocket conections
     */
    shutdown(): Promise<void>;
}
